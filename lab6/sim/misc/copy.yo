                            | # Student ID:520030910021
                            | # Name:  Feng Yifei
                            | 
                            | #/* $begin code-yso */
                            | #/* $begin code-ysa */
                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | init:	irmovq Stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call Main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: b000000000000000     | 	.quad 0x0b0
0x028: 000c000000000000     | 	.quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     | 	.quad 0x111
0x038: 2202000000000000     | 	.quad 0x222
0x040: 3303000000000000     | 	.quad 0x333
                            | 
                            | # main
0x048:                      | Main:
0x048: 30f71800000000000000 | 	irmovq src ,%rdi
0x052: 30f63000000000000000 | 	irmovq dest,%rsi
0x05c: 30f20300000000000000 | 	irmovq $3, %rdx
0x066: 807000000000000000   | 	call Copy
0x06f: 90                   | 	ret
                            | 	
0x070:                      | Copy:	
0x070: 6300                 | 	xorq %rax,%rax		# result = 0
0x072: 30f80800000000000000 | 	irmovq $0x8, %r8       	#save 0x8 in %r8
0x07c: 30f90100000000000000 | 	irmovq 0x1,%r9		#save 0x1 in %9
0x086: 6222                 | 	andq %rdx, %rdx		#set CC
0x088: 71b600000000000000   | 	jle End
0x091:                      | Loop:	
0x091: 50170000000000000000 | 	mrmovq (%rdi), %rcx	#save val in %rcx
0x09b: 6087                 | 	addq %r8, %rdi 		#src ++
0x09d: 40160000000000000000 | 	rmmovq %rcx, (%rsi)	#*dest = val
0x0a7: 6086                 | 	addq %r8, %rsi		#dest ++
0x0a9: 6310                 | 	xorq %rcx, %rax		# result ^= val
0x0ab: 6192                 | 	subq %r9, %rdx		#len --
0x0ad: 769100000000000000   | 	jg Loop
                            | 	
0x0b6: 90                   | End:	ret
                            | #/* $end sum-ys 0 */
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | Stack:	 
                            | #/* $end code-ysa */
                            | #/* $end code-yso */
