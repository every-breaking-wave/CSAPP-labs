                            | # Student ID:520030910021
                            | # Name: Feng Yifei
                            | 
                            | #/* $begin code-yso */
                            | #/* $begin code-ysa */
                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | init:	irmovq Stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call Main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array 
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 
0x048: 30f71800000000000000 | Main:	irmovq ele1,%rdi
0x052: 805c00000000000000   | 	call Sum		
0x05b: 90                   | 	ret 
                            | 
                            | #/* $begin sum-ys 0 */
                            | 	# int Sum(int *Start)
0x05c:                      | Sum:	
0x05c: 6300                 | 	xorq %rax,%rax		#set val = 0
0x05e: 6277                 | 	andq %rdi,%rdi		 
0x060: 739200000000000000   | 	je End			#return 0	
                            | 		
0x069: 50070000000000000000 | 	mrmovq (%rdi), %rax
0x073: a00f                 | 	pushq %rax
0x075: a07f                 | 	pushq %rdi
0x077: 50770800000000000000 | 	mrmovq 0x8(%rdi) , %rdi         # array = array->next
0x081: 805c00000000000000   | 	call Sum
0x08a: 2008                 | 	rrmovq %rax, %r8
0x08c: b07f                 | 	popq %rdi
0x08e: b00f                 | 	popq %rax
0x090: 6080                 | 	addq %r8,%rax
                            | 
0x092: 90                   | End:	ret
                            | #/* $end sum-ys 0 */
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | Stack:	 
                            | #/* $end code-ysa */
                            | #/* $end code-yso */
